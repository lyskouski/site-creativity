<?php namespace Engine\Request;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-07-14 at 09:23:34.
 */
class InputTest extends \Tests\Simple
{

    /**
     * @var Input
     */
    protected $object;

    protected function setUp()
    {
        parent::setUp();
        $this->object = new Input;
    }

    /**
     * @covers Engine\Request\Input::fake
     * @covers Engine\Request\Input::clearOverride
     * @covers Engine\Request\Input::getGet
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testFake()
    {
        $aTest = array(
            'test' => 'data'
        );
        $this->object->fake($aTest, INPUT_GET);
        $this->assertInternalType('array', $this->object->getGet());
        $this->assertEquals($aTest, $this->object->getGet());
        $this->object->clearOverride(INPUT_GET);
        $this->assertEquals(array(), $this->object->getGet());
    }

    /**
     * @covers Engine\Request\Input::setGet
     * @covers Engine\Request\Input::getGet
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testSetGet()
    {
        $this->object->setGet('test', 1);
        $this->assertEquals(1, $this->object->getGet('test'));
        $this->assertEquals('1', $this->object->getGet('test', '', FILTER_SANITIZE_STRING));
        $this->assertEquals(false, $this->object->getGet('test', false, FILTER_VALIDATE_EMAIL));
    }

    /**
     * @covers Engine\Request\Input::setPost
     * @covers Engine\Request\Input::getPost
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testSetPost()
    {
        $this->object->setPost('test', 1);
        $this->assertEquals(1, $this->object->getPost('test'));
        // Ignored if exist
        $this->object->setPost('test', 2, false);
        $this->assertEquals(1, $this->object->getPost('test'));

        $aCheckArray = array('a' => 2);
        $this->object->setPost('test', $aCheckArray);
        $this->assertEquals($aCheckArray, $this->object->getPost('test'));


        $this->object->setPost('url', '/relative/path.jpg');
        $this->assertEquals(null, $this->object->getPost('url', null, FILTER_VALIDATE_URL));

        $url = 'http://creativity.by/relative/path.jpg';
        $this->object->setPost('url', $url);
        $this->assertEquals($url, $this->object->getPost('url', null, FILTER_VALIDATE_URL));
    }

    /**
     * @covers Engine\Request\Input::setPost
     * @covers Engine\Request\Input::getPost
     * @covers Engine\Request\Input::getGet
     * @covers Engine\Request\Input::setGet
     * @covers Engine\Request\Input::getParam
     * @covers Engine\Request\Input::getParams
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testGetParam()
    {
        $this->object->setGet('test', 1);
        $this->assertEquals(1, $this->object->getGet('test'));
        $this->assertEquals(null, $this->object->getGet('testing'));

        $this->assertEquals(1, $this->object->getParam('test'));
        $this->object->setPost('test', 2);
        $this->assertEquals(2, $this->object->getPost('test'));
        $this->assertEquals(2, $this->object->getParam('test'));
        $this->assertEquals(array('test' => 2), $this->object->getParams());

        $this->object->fake(array(), INPUT_GET)->fake(array(), INPUT_POST);
        $this->assertEquals(array(), $this->object->getParam());
    }

    /**
     * @covers Engine\Request\Input::getInsParam
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testGetInsParam()
    {
        $this->object->setGet('test', 1);

        $this->assertEquals(1, $this->object->getInsParam('test'));
        $this->assertEquals(1, $this->object->getInsParam('TEST'));
        $this->assertEquals(1, $this->object->getInsParam('TeSt'));
    }

    /**
     * @covers Engine\Request\Input::setCookie
     * @covers Engine\Request\Input::getCookie
     * @covers Engine\Request\Input::delCookie
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testSetCookie()
    {
        // override basic functionality
        if (function_exists('runkit_function_redefine')) {
            runkit_function_redefine('setcookie', '', '');
        }

        $this->object->fake(array('test' => 1), INPUT_COOKIE);
        $this->assertEquals(1, $this->object->getCookie('test'));
        $this->object->setCookie('test', 2);
        $this->assertEquals(2, $this->object->getCookie('test'));
        $this->object->delCookie('test');
        $this->assertEquals(null, $this->object->getCookie('test'));
    }

    /**
     * @covers Engine\Request\Input::getServer
     * @covers Engine\Request\Input::setServer
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testGetServer()
    {
        $this->assertEquals('', $this->object->getServer('REQUEST_URI'));
        $this->assertEquals('/', $this->object->getServer('REQUEST_URI', '/'));
        $this->object->setServer('REQUEST_URI', '/index.html');
        $this->assertEquals('/index.html', $this->object->getServer('REQUEST_URI'));
    }

    /**
     * @covers Engine\Request\Input::setSession
     * @covers Engine\Request\Input::getSession
     * @covers Engine\Request\Input::delSession
     * @covers Engine\Request\Input::getValue
     * @covers Engine\Request\Input::filterValue
     * @covers Engine\Request\Input::getValidationList
     */
    public function testSetSession()
    {
        $this->object->setSession('test', 1);
        $this->assertEquals(1, $this->object->getSession('test'));
        $this->object->delSession('test');
        $this->assertEquals(null, $this->object->getSession('test'));
    }

    /**
     * @covers Engine\Request\Input::getUrlProtocol
     */
    public function testGetUrlProtocol()
    {
        $this->assertEquals('http', $this->object->getUrlProtocol());
    }

    /**
     * @note actual url is missing for PHPUnit
     *
     * @covers Engine\Request\Input::getUrl
     */
    public function testGetUrl()
    {
        $this->assertEquals('http://creativity.by/be', $this->object->getUrl());
        $this->assertEquals('http://creativity.by/be/index.html', $this->object->getUrl(true));
        $this->assertEquals('http://creativity.by/be/index.html?test=1&amp;test2=2', $this->object->getUrl(true, array('test' => 1, 'test2' => 2)));
    }

    /**
     * @note referer url is missing for PHPUnit
     *
     * @covers Engine\Request\Input::getRefererUrl
     */
    public function testGetRefererUrl()
    {
        $this->assertEquals('http://creativity.by/be/index.html', $this->object->getRefererUrl());
    }
}
