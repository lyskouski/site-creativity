<?php namespace Data\Doctrine\Main;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-09-21 at 09:20:48.
 */
class ActionTest extends \Tests\Simple
{
    /**
     * @var Action
     */
    protected $object;

    protected function setUp()
    {
        parent::setUp();
        $this->object = new Action;
    }

    /**
     * Check if all links are available in `action`-table
     */
    public function testDatabaseConsistency()
    {
        $sPath = realpath(\System\Registry::config()->getAppPath());
        $aControllers = explode("\n", shell_exec("grep -rnw {$sPath} -e 'class Controller'"));

        $oEntityManager = (new \Tests\Config\Database)->getRealDatabase();
        /* @var $oRepository \Doctrine\ORM\EntityRepository */
        $oRepository = $oEntityManager->getRepository(\Defines\Database\CrMain::ACTION);
        $aAllActions = array();
        $bUpdates = false;
        foreach ($aControllers as $sSearch) {
            $a = explode('.php', substr($sSearch, strlen($sPath)));
            $s = str_replace(DIRECTORY_SEPARATOR, '\\', $a[0]);
            if (!$s) {
                continue;
            }
            // remove '/Controller'
            $sUrl = substr(trim(strtolower($a[0]), '/'), 0, -11);
            $sName = \System\Registry::config()->getModulePrefix() . $s;
            //$oClass = new \ReflectionClass( $sName );
            $aMethods = ( new \System\Aggregator)->func2array($sName, 'Action');
            foreach ($aMethods as $sAction) {
                $sAction = substr($sAction, 0, -6);
                $aAllActions["$sUrl:$sAction"] = array('url' => $sUrl, 'action' => $sAction);
                // Check if missing
                if (!$oRepository->findOneBy(end($aAllActions))) {
                    $oAction = new \Data\Doctrine\Main\Action();
                    $oAction->setUrl($sUrl)->setAction($sAction);
                    $oEntityManager->persist($oAction);
                    $bUpdates = true;
                }
            }
        }
        if ($bUpdates) {
            $oEntityManager->flush();
            $this->assertTrue(false, 'Some new actions have been added. Retry test execution.');
        }

        // Check if something is missing
        $aDbActions = $oRepository->findAll();
        if (sizeof($aDbActions) != sizeof($aAllActions)) {
            /* @var $oAction \Data\Doctrine\Main\Action */
            foreach ($aDbActions as $oAction) {
                if (key_exists($oAction->getUrl() . ':' . $oAction->getAction(), $aAllActions)) {
                    continue;
                }
                $oEntityManager->remove($oAction);
            }
            $oEntityManager->flush();
            $this->assertTrue(false, 'Some actions have been deleted. Retry test execution.');
        }
    }

    /**
     * @covers Data\Doctrine\Main\Action::getUrl
     * @covers Data\Doctrine\Main\Action::setUrl
     */
    public function testGetUrl()
    {
        $sAddr = 'index';
        $this->object->setUrl($sAddr);
        $this->assertEquals($sAddr, $this->object->getUrl());
    }

    /**
     * @covers Data\Doctrine\Main\Action::setAction
     * @covers Data\Doctrine\Main\Action::getAction
     */
    public function testGetAction()
    {
        $sAddr = 'index';
        $this->object->setAction($sAddr);
        $this->assertEquals($sAddr, $this->object->getAction());
    }

    /**
     * @covers Data\Doctrine\Main\Action::getId
     */
    public function testGetId()
    {
        $this->assertEquals(null, $this->object->getId());
    }
}
